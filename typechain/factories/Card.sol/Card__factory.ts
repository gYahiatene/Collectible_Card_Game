/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Card, CardInterface } from "../../Card.sol/Card";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_nameCard",
        type: "string",
      },
      {
        internalType: "string",
        name: "_imageURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_cardId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getIdCard",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getImageURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNameCard",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620021cc380380620021cc8339818101604052810190620000379190620004cf565b8360049081620000489190620007c0565b5082600590816200005a9190620007c0565b50816006819055506200007481836200007e60201b60201c565b5050505062000a18565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000f0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000e79062000908565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462000194576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200018b906200097a565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190620001e690620009cb565b91905055508160008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200030582620002ba565b810181811067ffffffffffffffff82111715620003275762000326620002cb565b5b80604052505050565b60006200033c6200029c565b90506200034a8282620002fa565b919050565b600067ffffffffffffffff8211156200036d576200036c620002cb565b5b6200037882620002ba565b9050602081019050919050565b60005b83811015620003a557808201518184015260208101905062000388565b60008484015250505050565b6000620003c8620003c2846200034f565b62000330565b905082815260208101848484011115620003e757620003e6620002b5565b5b620003f484828562000385565b509392505050565b600082601f830112620004145762000413620002b0565b5b815162000426848260208601620003b1565b91505092915050565b6000819050919050565b62000444816200042f565b81146200045057600080fd5b50565b600081519050620004648162000439565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000497826200046a565b9050919050565b620004a9816200048a565b8114620004b557600080fd5b50565b600081519050620004c9816200049e565b92915050565b60008060008060808587031215620004ec57620004eb620002a6565b5b600085015167ffffffffffffffff8111156200050d576200050c620002ab565b5b6200051b87828801620003fc565b945050602085015167ffffffffffffffff8111156200053f576200053e620002ab565b5b6200054d87828801620003fc565b9350506040620005608782880162000453565b92505060606200057387828801620004b8565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620005d257607f821691505b602082108103620005e857620005e76200058a565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620006527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000613565b6200065e868362000613565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620006a16200069b62000695846200042f565b62000676565b6200042f565b9050919050565b6000819050919050565b620006bd8362000680565b620006d5620006cc82620006a8565b84845462000620565b825550505050565b600090565b620006ec620006dd565b620006f9818484620006b2565b505050565b5b81811015620007215762000715600082620006e2565b600181019050620006ff565b5050565b601f82111562000770576200073a81620005ee565b620007458462000603565b8101602085101562000755578190505b6200076d620007648562000603565b830182620006fe565b50505b505050565b600082821c905092915050565b6000620007956000198460080262000775565b1980831691505092915050565b6000620007b0838362000782565b9150826002028217905092915050565b620007cb826200057f565b67ffffffffffffffff811115620007e757620007e6620002cb565b5b620007f38254620005b9565b6200080082828562000725565b600060209050601f83116001811462000838576000841562000823578287015190505b6200082f8582620007a2565b8655506200089f565b601f1984166200084886620005ee565b60005b8281101562000872578489015182556001820191506020850194506020810190506200084b565b868310156200089257848901516200088e601f89168262000782565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f6d696e7420746f207a65726f2061646472657373000000000000000000000000600082015250565b6000620008f0601483620008a7565b9150620008fd82620008b8565b602082019050919050565b600060208201905081810360008301526200092381620008e1565b9050919050565b7f616c7265616479206d696e746564000000000000000000000000000000000000600082015250565b600062000962600e83620008a7565b91506200096f826200092a565b602082019050919050565b60006020820190508181036000830152620009958162000953565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620009d8826200042f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362000a0d5762000a0c6200099c565b5b600182019050919050565b6117a48062000a286000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80637d615227116100715780637d6152271461019d578063a22cb465146101bb578063a541710c146101d7578063b88d4fde146101f5578063ded7222b14610211578063e985e9c51461022f576100b4565b8063081812fc146100b9578063095ea7b3146100e957806323b872dd1461010557806342842e0e146101215780636352211e1461013d57806370a082311461016d575b600080fd5b6100d360048036038101906100ce9190610e36565b61025f565b6040516100e09190610ea4565b60405180910390f35b61010360048036038101906100fe9190610eeb565b61033c565b005b61011f600480360381019061011a9190610f2b565b610524565b005b61013b60048036038101906101369190610f2b565b6107c4565b005b61015760048036038101906101529190610e36565b6108fc565b6040516101649190610ea4565b60405180910390f35b61018760048036038101906101829190610f7e565b6109a7565b6040516101949190610fba565b60405180910390f35b6101a5610a5e565b6040516101b29190611065565b60405180910390f35b6101d560048036038101906101d091906110bf565b610af0565b005b6101df610bed565b6040516101ec9190610fba565b60405180910390f35b61020f600480360381019061020a9190611164565b610bf7565b005b610219610d35565b6040516102269190611065565b60405180910390f35b610249600480360381019061024491906111ec565b610dc7565b604051610256919061123b565b60405180910390f35b60008073ffffffffffffffffffffffffffffffffffffffff1660008084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610301576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f8906112a2565b60405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806104335750600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b610472576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104699061130e565b60405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60008082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146105c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bb9061137a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610633576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062a906113e6565b60405180910390fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061068390611435565b9190505550600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906106d89061145e565b91905055508160008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6107cf838383610524565b60008273ffffffffffffffffffffffffffffffffffffffff163b14806108b8575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168273ffffffffffffffffffffffffffffffffffffffff1663150b7a023386856040518463ffffffff1660e01b8152600401610854939291906114dd565b6020604051808303816000875af1158015610873573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610897919061157f565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b6108f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ee906115f8565b60405180910390fd5b505050565b600080600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109a2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610999906112a2565b60405180910390fd5b919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0e90611664565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054610a6d906116b3565b80601f0160208091040260200160405190810160405280929190818152602001828054610a99906116b3565b8015610ae65780601f10610abb57610100808354040283529160200191610ae6565b820191906000526020600020905b815481529060010190602001808311610ac957829003601f168201915b5050505050905090565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610be1919061123b565b60405180910390a35050565b6000600654905090565b610c02858585610524565b60008473ffffffffffffffffffffffffffffffffffffffff163b1480610cef575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168473ffffffffffffffffffffffffffffffffffffffff1663150b7a0233888787876040518663ffffffff1660e01b8152600401610c8b959493929190611720565b6020604051808303816000875af1158015610caa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cce919061157f565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b610d2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d25906115f8565b60405180910390fd5b5050505050565b606060058054610d44906116b3565b80601f0160208091040260200160405190810160405280929190818152602001828054610d70906116b3565b8015610dbd5780601f10610d9257610100808354040283529160200191610dbd565b820191906000526020600020905b815481529060010190602001808311610da057829003601f168201915b5050505050905090565b60036020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600080fd5b600080fd5b6000819050919050565b610e1381610e00565b8114610e1e57600080fd5b50565b600081359050610e3081610e0a565b92915050565b600060208284031215610e4c57610e4b610df6565b5b6000610e5a84828501610e21565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e8e82610e63565b9050919050565b610e9e81610e83565b82525050565b6000602082019050610eb96000830184610e95565b92915050565b610ec881610e83565b8114610ed357600080fd5b50565b600081359050610ee581610ebf565b92915050565b60008060408385031215610f0257610f01610df6565b5b6000610f1085828601610ed6565b9250506020610f2185828601610e21565b9150509250929050565b600080600060608486031215610f4457610f43610df6565b5b6000610f5286828701610ed6565b9350506020610f6386828701610ed6565b9250506040610f7486828701610e21565b9150509250925092565b600060208284031215610f9457610f93610df6565b5b6000610fa284828501610ed6565b91505092915050565b610fb481610e00565b82525050565b6000602082019050610fcf6000830184610fab565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561100f578082015181840152602081019050610ff4565b60008484015250505050565b6000601f19601f8301169050919050565b600061103782610fd5565b6110418185610fe0565b9350611051818560208601610ff1565b61105a8161101b565b840191505092915050565b6000602082019050818103600083015261107f818461102c565b905092915050565b60008115159050919050565b61109c81611087565b81146110a757600080fd5b50565b6000813590506110b981611093565b92915050565b600080604083850312156110d6576110d5610df6565b5b60006110e485828601610ed6565b92505060206110f5858286016110aa565b9150509250929050565b600080fd5b600080fd5b600080fd5b60008083601f840112611124576111236110ff565b5b8235905067ffffffffffffffff81111561114157611140611104565b5b60208301915083600182028301111561115d5761115c611109565b5b9250929050565b6000806000806000608086880312156111805761117f610df6565b5b600061118e88828901610ed6565b955050602061119f88828901610ed6565b94505060406111b088828901610e21565b935050606086013567ffffffffffffffff8111156111d1576111d0610dfb565b5b6111dd8882890161110e565b92509250509295509295909350565b6000806040838503121561120357611202610df6565b5b600061121185828601610ed6565b925050602061122285828601610ed6565b9150509250929050565b61123581611087565b82525050565b6000602082019050611250600083018461122c565b92915050565b7f746f6b656e20646f65736e277420657869737400000000000000000000000000600082015250565b600061128c601383610fe0565b915061129782611256565b602082019050919050565b600060208201905081810360008301526112bb8161127f565b9050919050565b7f6e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b60006112f8600e83610fe0565b9150611303826112c2565b602082019050919050565b60006020820190508181036000830152611327816112eb565b9050919050565b7f66726f6d20213d206f776e657200000000000000000000000000000000000000600082015250565b6000611364600d83610fe0565b915061136f8261132e565b602082019050919050565b6000602082019050818103600083015261139381611357565b9050919050565b7f7472616e7366657220746f207a65726f20616464726573730000000000000000600082015250565b60006113d0601883610fe0565b91506113db8261139a565b602082019050919050565b600060208201905081810360008301526113ff816113c3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061144082610e00565b91506000820361145357611452611406565b5b600182039050919050565b600061146982610e00565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361149b5761149a611406565b5b600182019050919050565b600082825260208201905092915050565b50565b60006114c76000836114a6565b91506114d2826114b7565b600082019050919050565b60006080820190506114f26000830186610e95565b6114ff6020830185610e95565b61150c6040830184610fab565b818103606083015261151d816114ba565b9050949350505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61155c81611527565b811461156757600080fd5b50565b60008151905061157981611553565b92915050565b60006020828403121561159557611594610df6565b5b60006115a38482850161156a565b91505092915050565b7f756e7361666520726563697069656e7400000000000000000000000000000000600082015250565b60006115e2601083610fe0565b91506115ed826115ac565b602082019050919050565b60006020820190508181036000830152611611816115d5565b9050919050565b7f6f776e6572203d207a65726f2061646472657373000000000000000000000000600082015250565b600061164e601483610fe0565b915061165982611618565b602082019050919050565b6000602082019050818103600083015261167d81611641565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806116cb57607f821691505b6020821081036116de576116dd611684565b5b50919050565b82818337600083830152505050565b60006116ff83856114a6565b935061170c8385846116e4565b6117158361101b565b840190509392505050565b60006080820190506117356000830188610e95565b6117426020830187610e95565b61174f6040830186610fab565b81810360608301526117628184866116f3565b9050969550505050505056fea2646970667358221220616c8cfdafc2377b47133c86a1295d29653f21036e5d149e5c947c0c074195b964736f6c63430008100033";

type CardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CardConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Card__factory extends ContractFactory {
  constructor(...args: CardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _nameCard: PromiseOrValue<string>,
    _imageURI: PromiseOrValue<string>,
    _cardId: PromiseOrValue<BigNumberish>,
    creator: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Card> {
    return super.deploy(
      _nameCard,
      _imageURI,
      _cardId,
      creator,
      overrides || {}
    ) as Promise<Card>;
  }
  override getDeployTransaction(
    _nameCard: PromiseOrValue<string>,
    _imageURI: PromiseOrValue<string>,
    _cardId: PromiseOrValue<BigNumberish>,
    creator: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _nameCard,
      _imageURI,
      _cardId,
      creator,
      overrides || {}
    );
  }
  override attach(address: string): Card {
    return super.attach(address) as Card;
  }
  override connect(signer: Signer): Card__factory {
    return super.connect(signer) as Card__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CardInterface {
    return new utils.Interface(_abi) as CardInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Card {
    return new Contract(address, _abi, signerOrProvider) as Card;
  }
}
